#!/bin/bash
export RANGE=${RANGE:-1 10 100}
export CONCURRENCY=${CONCURRENCY:-4}
export TRANSACTIONS=${TRANSACTIONS:-1000}

usage="$(basename "$0") [-h] [-r \"s\"] [-c n] [-t n] -- benchmark database for aidbox.
Script takes list of database sizes (via patients count in db) and performs set of benchamrks for each size.

where:
    -h  show this help text
    -r  set the range of patients count in db (default: \"1 10 100\")
    -c  number of clients simulated in benchmark (default: 4)
    -t  number of transactions for each benchamrk (default: 1000)"

while getopts ':hr:c:t:' option; do
    case "$option" in
        h) echo "$usage"
           exit
           ;;
        r) RANGE=$OPTARG
           ;;
        c) CONCURRENCY=$OPTARG
           ;;
        t) TRANSACTIONS=$OPTARG
           ;;
        :) printf "missing argument for -%s\n" "$OPTARG" >&2
           echo "$usage" >&2
           exit 1
           ;;
        \?) printf "illegal option: -%s\n" "$OPTARG" >&2
            echo "$usage" >&2
            exit 1
            ;;
    esac
done

for PATIENTS in $RANGE; do
    psql proto -U postgres -p 5432 -h localhost -f util/create_tables.sql &> /dev/null
    psql proto -U postgres -p 5432 -h localhost -f util/functions.sql &> /dev/null
    time psql proto -U postgres -p 5432 -h localhost -c "select insert_patients($PATIENTS);"
	  time psql proto -U postgres -p 5432 -h localhost -c "select insert_observations(1000 * $PATIENTS);"
	  time psql proto -U postgres -p 5432 -h localhost -c "select insert_medicationstatements(100 * $PATIENTS);"

    echo "benchmark $PATIENTS" > $PATIENTS

    for TEST in $(ls benchmarks/*.sql); do
        docker exec -it aiddb pgbench -c $CONCURRENCY -j 2 -r -t $TRANSACTIONS -s $PATIENTS -f $TEST proto > results.txt
        TPS=$(grep "(including connections establishing)" results.txt | cut -d " " -f 3 | xargs printf "%.0f")
        echo "$TEST $TPS" >> $PATIENTS
        rm results.txt
    done;

    for TEST in $(ls benchmarks/*.sql); do
        docker exec -it aiddb pgbench -c $CONCURRENCY -j 2 -r -t $TRANSACTIONS -s $PATIENTS -f $TEST@9 -f benchmarks/insert/observations.sql@1 proto > results.txt
        TPS=$(grep "(including connections establishing)" results.txt | cut -d " " -f 3 | xargs printf "%.0f")
        echo "$TEST-insert $TPS" >> $PATIENTS
        rm results.txt
    done;
done;

echo "DATABASE INFORMATION"
psql proto -U postgres -p 5432 -h localhost -f util/db_information.sql

echo "BENCHMARK RESULTS"
paste $RANGE | awk '{for(x=1;x<=NF;x++)if(!(x % 2) || (x == 1))printf "%s", $x (x == NF || x == (NF-1)?"\n":" ")}' | column -t

yes | rm $RANGE
